[2m2025-10-29T04:48:41.878164Z[0m [32m INFO[0m [2mexecutors::profile[0m[2m:[0m Loaded user profile overrides from profiles.json
[2m2025-10-29T04:48:41.885685Z[0m [32m INFO[0m [2mlocal_deployment[0m[2m:[0m Starting orphaned image cleanup...
[2m2025-10-29T04:48:41.894540Z[0m [32m INFO[0m [2mlocal_deployment::container[0m[2m:[0m Starting periodic worktree cleanup...
[2m2025-10-29T04:48:41.897462Z[0m [32m INFO[0m [2mservices::services::pr_monitor[0m[2m:[0m Starting PR monitoring service with interval 60s
[2m2025-10-29T04:48:41.897614Z[0m [32m INFO[0m [2mservices::services::file_search_cache[0m[2m:[0m Starting file search cache warming...
[2m2025-10-29T04:48:41.899146Z[0m [32m INFO[0m [2mservices::services::file_search_cache[0m[2m:[0m Warming cache for 1 projects: ["/opt/stacks/vibe-kanban"]
[2m2025-10-29T04:48:41.899751Z[0m [32m INFO[0m [2mservices::services::file_search_cache[0m[2m:[0m Setup file watcher for repo: "/opt/stacks/vibe-kanban"
[2m2025-10-29T04:48:41.899815Z[0m [32m INFO[0m [2mservices::services::file_search_cache[0m[2m:[0m File search cache warming completed
[2m2025-10-29T04:48:41.899816Z[0m [32m INFO[0m [2mservices::services::file_search_cache[0m[2m:[0m Building cache for repo: "/opt/stacks/vibe-kanban"
[2m2025-10-29T04:48:41.910126Z[0m [32m INFO[0m [2mserver[0m[2m:[0m Server running on http://0.0.0.0:3105
[2m2025-10-29T04:48:42.550954Z[0m [32m INFO[0m [2mservices::services::file_search_cache[0m[2m:[0m Successfully cached repo: "/opt/stacks/vibe-kanban"
[2m2025-10-29T04:48:42.585582Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:48:45.500347Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:48:48.500309Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:48:51.509245Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:48:54.489099Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:48:57.489050Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:00.498603Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:03.494473Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:06.475902Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:09.486799Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:12.476444Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:15.490085Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:18.483217Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:21.490192Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:24.477143Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:27.485092Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:30.485101Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:32.525891Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:34.576048Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:36.341993Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:36.551498Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:38.592311Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:40.639943Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:42.692221Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:44.738706Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:46.777634Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:48.820045Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:50.859674Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:51.963471Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Worktree needs recreation at path: /var/tmp/vibe-kanban-dev/worktrees/e31e-expand-mcp-serve
[2m2025-10-29T04:49:51.963567Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Creating worktree vk/e31e-expand-mcp-serve at path /var/tmp/vibe-kanban-dev/worktrees/e31e-expand-mcp-serve
[2m2025-10-29T04:49:52.223345Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Successfully created worktree vk/e31e-expand-mcp-serve at /var/tmp/vibe-kanban-dev/worktrees/e31e-expand-mcp-serve (git CLI)
[2m2025-10-29T04:49:52.261866Z[0m [32m INFO[0m [2mserver::routes::task_attempts[0m[2m:[0m Started execution process 1f2235e7-2d8d-4052-bc13-4df329cf6220
[2m2025-10-29T04:49:52.463762Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:54.296063Z[0m [31mERROR[0m [2mservices::services::notification[0m[2m:[0m Failed to send Linux notification: I/O error: No such file or directory (os error 2)
Failed to create secure directory (/home/mcp-user/.config/pulse): Permission denied
Connection failure: Connection refused
pa_context_connect() failed: Connection refused
[2m2025-10-29T04:49:54.396557Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:49:56.429366Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:52:03.110626Z[0m [32m INFO[0m [2mexecutors::profile[0m[2m:[0m Saved profile overrides to "/opt/stacks/vibe-kanban/crates/utils/../../dev_assets/profiles.json"
[2m2025-10-29T04:52:03.110805Z[0m [32m INFO[0m [2mserver::routes::config[0m[2m:[0m Executor profiles saved successfully
[2m2025-10-29T04:52:03.112159Z[0m [32m INFO[0m [2mexecutors::profile[0m[2m:[0m Loaded user profile overrides from profiles.json
[2m2025-10-29T04:52:18.344558Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:52:18.534964Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:52:20.582114Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:52:22.629171Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:52:24.672138Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:52:26.716138Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:52:28.754656Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:52:30.795289Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:52:31.144518Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Worktree needs recreation at path: /var/tmp/vibe-kanban-dev/worktrees/15e3-expand-mcp-serve
[2m2025-10-29T04:52:31.144616Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Creating worktree vk/15e3-expand-mcp-serve at path /var/tmp/vibe-kanban-dev/worktrees/15e3-expand-mcp-serve
[2m2025-10-29T04:52:31.416559Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Successfully created worktree vk/15e3-expand-mcp-serve at /var/tmp/vibe-kanban-dev/worktrees/15e3-expand-mcp-serve (git CLI)
[2m2025-10-29T04:52:31.462178Z[0m [32m INFO[0m [2mserver::routes::task_attempts[0m[2m:[0m Started execution process 7f1e778b-a206-4c10-8bd8-f239e817089e
[2m2025-10-29T04:52:31.677016Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:52:33.491997Z[0m [31mERROR[0m [2mservices::services::notification[0m[2m:[0m Failed to send Linux notification: I/O error: No such file or directory (os error 2)
Failed to create secure directory (/home/mcp-user/.config/pulse): Permission denied
Connection failure: Connection refused
pa_context_connect() failed: Connection refused
[2m2025-10-29T04:52:33.598206Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:52:35.645798Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:52:37.695466Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:52:39.743695Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:52:41.784309Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:52:43.832176Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:52:45.880163Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:54:05.450216Z[0m [32m INFO[0m [2mexecutors::profile[0m[2m:[0m Saved profile overrides to "/opt/stacks/vibe-kanban/crates/utils/../../dev_assets/profiles.json"
[2m2025-10-29T04:54:05.450418Z[0m [32m INFO[0m [2mserver::routes::config[0m[2m:[0m Executor profiles saved successfully
[2m2025-10-29T04:54:05.451970Z[0m [32m INFO[0m [2mexecutors::profile[0m[2m:[0m Loaded user profile overrides from profiles.json
[2m2025-10-29T04:54:33.708176Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Worktree needs recreation at path: /var/tmp/vibe-kanban-dev/worktrees/a87c-implement-delete
[2m2025-10-29T04:54:33.708387Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Creating worktree vk/a87c-implement-delete at path /var/tmp/vibe-kanban-dev/worktrees/a87c-implement-delete
[2m2025-10-29T04:54:33.988342Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Successfully created worktree vk/a87c-implement-delete at /var/tmp/vibe-kanban-dev/worktrees/a87c-implement-delete (git CLI)
[2m2025-10-29T04:54:34.026504Z[0m [32m INFO[0m [2mserver::routes::task_attempts[0m[2m:[0m Started execution process 5b3dcf14-2fa5-46e2-880a-80d210222641
[2m2025-10-29T04:54:34.205169Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:54:36.052540Z[0m [31mERROR[0m [2mservices::services::notification[0m[2m:[0m Failed to send Linux notification: I/O error: No such file or directory (os error 2)
Failed to create secure directory (/home/mcp-user/.config/pulse): Permission denied
Connection failure: Connection refused
pa_context_connect() failed: Connection refused
[2m2025-10-29T04:54:36.153050Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:54:38.210284Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:54:40.249643Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:54:42.292989Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:54:44.333248Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:54:46.387278Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:54:48.425239Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:54:50.471505Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:54:52.512973Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:54:54.555471Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:54:56.594579Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:54:58.643408Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:00.690754Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:02.734047Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:04.781510Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:06.822596Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:08.871055Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:10.920350Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:12.961280Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:15.004358Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:17.050110Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:19.100651Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:21.141457Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:23.183059Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:25.237304Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:27.295890Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:29.496106Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:32.489235Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:34.540031Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:37.504794Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:40.490258Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:43.509784Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:46.498764Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:49.494569Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:52.499556Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:55.503152Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:55:58.503666Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:01.490365Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:04.500595Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:07.506229Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:10.501850Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:13.492490Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:16.491986Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:19.500719Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:22.497163Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:25.488071Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:28.500053Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:31.499425Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:34.485574Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:37.494877Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:40.502553Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:43.503139Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:46.502910Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:49.501580Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:52.490003Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:55.488361Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:56:58.501884Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:01.504745Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:04.504443Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:07.509175Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:10.492128Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:13.500679Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:16.496330Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:19.512498Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:22.489483Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:25.505280Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:28.502122Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:31.505325Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:34.490520Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:37.509229Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:40.499219Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:43.509628Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:46.502627Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:49.496884Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:52.495975Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:55.504405Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:57:58.503519Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:58:01.504883Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:58:04.490429Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:58:07.489352Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:58:10.496729Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:58:13.502891Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:58:16.498287Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:58:19.496323Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:58:22.495419Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:58:25.506931Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:58:28.502423Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:58:31.513710Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:58:34.515875Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:58:37.500695Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:58:40.488400Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T04:58:43.500959Z[0m [33m WARN[0m [2mserver::routes::task_attempts[0m[2m:[0m diff WS closed: Git service error: Invalid repository: git diff failed: git command failed: error: insufficient permission for adding an object to repository database /opt/stacks/vibe-kanban/.git/objects
error: .gitignore: failed to insert into database
error: unable to index file '.gitignore'
fatal: updating files failed
[2m2025-10-29T05:00:49.740044Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Worktree needs recreation at path: /var/tmp/vibe-kanban-dev/worktrees/6143-phase-3-tags-lab
[2m2025-10-29T05:00:49.740331Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Creating worktree vk/6143-phase-3-tags-lab at path /var/tmp/vibe-kanban-dev/worktrees/6143-phase-3-tags-lab
[2m2025-10-29T05:00:50.025605Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Successfully created worktree vk/6143-phase-3-tags-lab at /var/tmp/vibe-kanban-dev/worktrees/6143-phase-3-tags-lab (git CLI)
[2m2025-10-29T05:00:50.068139Z[0m [32m INFO[0m [2mserver::routes::task_attempts[0m[2m:[0m Started execution process 44f08c52-b222-4967-bb97-b67e1d88ee84
[2m2025-10-29T05:00:51.653389Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Worktree needs recreation at path: /var/tmp/vibe-kanban-dev/worktrees/5483-phase-3-authenti
[2m2025-10-29T05:00:51.653514Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Creating worktree vk/5483-phase-3-authenti at path /var/tmp/vibe-kanban-dev/worktrees/5483-phase-3-authenti
[2m2025-10-29T05:00:51.925267Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Successfully created worktree vk/5483-phase-3-authenti at /var/tmp/vibe-kanban-dev/worktrees/5483-phase-3-authenti (git CLI)
[2m2025-10-29T05:00:51.966436Z[0m [32m INFO[0m [2mserver::routes::task_attempts[0m[2m:[0m Started execution process f2d3c80d-c65c-4f61-bcec-13073ae119ad
[2m2025-10-29T05:00:53.589230Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Worktree needs recreation at path: /var/tmp/vibe-kanban-dev/worktrees/3b8e-phase-3-approval
[2m2025-10-29T05:00:53.589470Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Creating worktree vk/3b8e-phase-3-approval at path /var/tmp/vibe-kanban-dev/worktrees/3b8e-phase-3-approval
[2m2025-10-29T05:00:53.872298Z[0m [32m INFO[0m [2mservices::services::worktree_manager[0m[2m:[0m Successfully created worktree vk/3b8e-phase-3-approval at /var/tmp/vibe-kanban-dev/worktrees/3b8e-phase-3-approval (git CLI)
[2m2025-10-29T05:00:53.911645Z[0m [32m INFO[0m [2mserver::routes::task_attempts[0m[2m:[0m Started execution process 5eccc3a0-d220-474f-859a-b9ee9811596c
[2m2025-10-29T05:03:20.730474Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m32 [3melapsed[0m[2m=[0m1.331292765s [3melapsed_secs[0m[2m=[0m1.331292765 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:03:23.369260Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT id as \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT id as \"id!: Uuid\", name, git_repo_path, setup_script, dev_script, cleanup_script, copy_files, created_at as \"created_at!: DateTime<Utc>\", updated_at as \"updated_at!: DateTime<Utc>\" FROM projects ORDER BY created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m44 [3melapsed[0m[2m=[0m1.330411018s [3melapsed_secs[0m[2m=[0m1.330411018 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:03:26.934817Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m5.009673828s [3melapsed_secs[0m[2m=[0m5.009673828 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:03:26.934851Z[0m [31mERROR[0m [2mservices::services::container[0m[2m:[0m Failed to append log line for execution f2d3c80d-c65c-4f61-bcec-13073ae119ad: error returned from database: (code: 5) database is locked
[2m2025-10-29T05:03:28.479030Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m1.543252888s [3melapsed_secs[0m[2m=[0m1.543252888 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:03:29.364096Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m3.449845491s [3melapsed_secs[0m[2m=[0m3.449845491 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:03:52.110308Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m1.981592296s [3melapsed_secs[0m[2m=[0m1.981592296 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:03:52.188565Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m130 [3melapsed[0m[2m=[0m1.035606774s [3melapsed_secs[0m[2m=[0m1.035606774 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:03:54.237172Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m1.229735712s [3melapsed_secs[0m[2m=[0m1.229735712 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:03:54.330909Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m4.090722879s [3melapsed_secs[0m[2m=[0m4.090722879 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:03:54.332047Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m1.830548314s [3melapsed_secs[0m[2m=[0m1.830548314 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:03:54.510522Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m45 [3melapsed[0m[2m=[0m1.631921738s [3melapsed_secs[0m[2m=[0m1.631921738 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:03:56.920030Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m1.247982087s [3melapsed_secs[0m[2m=[0m1.247982087 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:04.722453Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m130 [3melapsed[0m[2m=[0m1.337241619s [3melapsed_secs[0m[2m=[0m1.337241619 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:04.910077Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m1.030257367s [3melapsed_secs[0m[2m=[0m1.030257367 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:05.168526Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT id as \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT id as \"id!: Uuid\", name, git_repo_path, setup_script, dev_script, cleanup_script, copy_files, created_at as \"created_at!: DateTime<Utc>\", updated_at as \"updated_at!: DateTime<Utc>\" FROM projects ORDER BY created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m44 [3melapsed[0m[2m=[0m1.130250208s [3melapsed_secs[0m[2m=[0m1.130250208 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:06.638074Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m2.53547201s [3melapsed_secs[0m[2m=[0m2.53547201 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:06.966136Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m2.831803238s [3melapsed_secs[0m[2m=[0m2.831803238 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:07.096184Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m45 [3melapsed[0m[2m=[0m1.434565116s [3melapsed_secs[0m[2m=[0m1.434565116 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:07.097977Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m32 [3melapsed[0m[2m=[0m1.63240667s [3melapsed_secs[0m[2m=[0m1.63240667 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:08.731630Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m5.01160643s [3melapsed_secs[0m[2m=[0m5.01160643 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:08.805344Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m48 [3melapsed[0m[2m=[0m2.232948627s [3melapsed_secs[0m[2m=[0m2.232948627 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:09.338219Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m4.426637156s [3melapsed_secs[0m[2m=[0m4.426637156 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:10.526347Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m130 [3melapsed[0m[2m=[0m3.738019968s [3melapsed_secs[0m[2m=[0m3.738019968 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:11.071408Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO tasks (id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO tasks (id, project_id, title, description, status, parent_task_attempt) \n               VALUES ($1, $2, $3, $4, $5, $6) \n               RETURNING id as \"id!: Uuid\", project_id as \"project_id!: Uuid\", title, description, status as \"status!: TaskStatus\", parent_task_attempt as \"parent_task_attempt: Uuid\", created_at as \"created_at!: DateTime<Utc>\", updated_at as \"updated_at!: DateTime<Utc>\"\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m2.336645315s [3melapsed_secs[0m[2m=[0m2.336645315 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:11.325632Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m45 [3melapsed[0m[2m=[0m3.332980419s [3melapsed_secs[0m[2m=[0m3.332980419 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:11.436154Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m2.148420235s [3melapsed_secs[0m[2m=[0m2.148420235 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:11.998227Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m3.194491695s [3melapsed_secs[0m[2m=[0m3.194491695 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:12.489169Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m2.831422294s [3melapsed_secs[0m[2m=[0m2.8314222940000002 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:13.378497Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m42 [3melapsed[0m[2m=[0m1.332242589s [3melapsed_secs[0m[2m=[0m1.332242589 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:13.648790Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m2.32898101s [3melapsed_secs[0m[2m=[0m2.32898101 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:14.131983Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT id as \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT id as \"id!: Uuid\", name, git_repo_path, setup_script, dev_script, cleanup_script, copy_files, created_at as \"created_at!: DateTime<Utc>\", updated_at as \"updated_at!: DateTime<Utc>\" FROM projects ORDER BY created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m44 [3melapsed[0m[2m=[0m4.135570413s [3melapsed_secs[0m[2m=[0m4.135570413 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:14.265721Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO tasks (id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO tasks (id, project_id, title, description, status, parent_task_attempt) \n               VALUES ($1, $2, $3, $4, $5, $6) \n               RETURNING id as \"id!: Uuid\", project_id as \"project_id!: Uuid\", title, description, status as \"status!: TaskStatus\", parent_task_attempt as \"parent_task_attempt: Uuid\", created_at as \"created_at!: DateTime<Utc>\", updated_at as \"updated_at!: DateTime<Utc>\"\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m3.139444277s [3melapsed_secs[0m[2m=[0m3.139444277 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:15.853955Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m2.031439092s [3melapsed_secs[0m[2m=[0m2.031439092 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:16.260059Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO tasks (id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO tasks (id, project_id, title, description, status, parent_task_attempt) \n               VALUES ($1, $2, $3, $4, $5, $6) \n               RETURNING id as \"id!: Uuid\", project_id as \"project_id!: Uuid\", title, description, status as \"status!: TaskStatus\", parent_task_attempt as \"parent_task_attempt: Uuid\", created_at as \"created_at!: DateTime<Utc>\", updated_at as \"updated_at!: DateTime<Utc>\"\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m1.93951654s [3melapsed_secs[0m[2m=[0m1.93951654 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:16.497760Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m2.945700981s [3melapsed_secs[0m[2m=[0m2.945700981 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:20.152978Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m1.830538875s [3melapsed_secs[0m[2m=[0m1.830538875 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:20.679542Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO tasks (id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO tasks (id, project_id, title, description, status, parent_task_attempt) \n               VALUES ($1, $2, $3, $4, $5, $6) \n               RETURNING id as \"id!: Uuid\", project_id as \"project_id!: Uuid\", title, description, status as \"status!: TaskStatus\", parent_task_attempt as \"parent_task_attempt: Uuid\", created_at as \"created_at!: DateTime<Utc>\", updated_at as \"updated_at!: DateTime<Utc>\"\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m2.437202777s [3melapsed_secs[0m[2m=[0m2.437202777 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:20.697532Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m5 [3melapsed[0m[2m=[0m1.130365737s [3melapsed_secs[0m[2m=[0m1.130365737 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:21.175585Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m130 [3melapsed[0m[2m=[0m2.837041582s [3melapsed_secs[0m[2m=[0m2.837041582 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:21.572741Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m1.83085701s [3melapsed_secs[0m[2m=[0m1.83085701 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:21.576771Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m45 [3melapsed[0m[2m=[0m2.037274391s [3melapsed_secs[0m[2m=[0m2.037274391 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:21.588546Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m240 [3melapsed[0m[2m=[0m1.242326139s [3melapsed_secs[0m[2m=[0m1.242326139 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:22.224507Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m130 [3melapsed[0m[2m=[0m2.836675347s [3melapsed_secs[0m[2m=[0m2.836675347 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:23.060671Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT id as \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT id as \"id!: Uuid\", name, git_repo_path, setup_script, dev_script, cleanup_script, copy_files, created_at as \"created_at!: DateTime<Utc>\", updated_at as \"updated_at!: DateTime<Utc>\" FROM projects ORDER BY created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m44 [3melapsed[0m[2m=[0m1.130821463s [3melapsed_secs[0m[2m=[0m1.130821463 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:23.247523Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m130 [3melapsed[0m[2m=[0m1.837667642s [3melapsed_secs[0m[2m=[0m1.837667642 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:24.296207Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m5.005521827s [3melapsed_secs[0m[2m=[0m5.005521827 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:24.296332Z[0m [31mERROR[0m [2mservices::services::container[0m[2m:[0m Failed to append log line for execution 5eccc3a0-d220-474f-859a-b9ee9811596c: error returned from database: (code: 5) database is locked
[2m2025-10-29T05:04:24.560282Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO tasks (id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO tasks (id, project_id, title, description, status, parent_task_attempt) \n               VALUES ($1, $2, $3, $4, $5, $6) \n               RETURNING id as \"id!: Uuid\", project_id as \"project_id!: Uuid\", title, description, status as \"status!: TaskStatus\", parent_task_attempt as \"parent_task_attempt: Uuid\", created_at as \"created_at!: DateTime<Utc>\", updated_at as \"updated_at!: DateTime<Utc>\"\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m2.935997251s [3melapsed_secs[0m[2m=[0m2.935997251 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:24.612550Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m3.033768408s [3melapsed_secs[0m[2m=[0m3.033768408 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:04:24.688699Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m5 [3melapsed[0m[2m=[0m2.633637958s [3melapsed_secs[0m[2m=[0m2.633637958 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:05:01.546112Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m2.677991845s [3melapsed_secs[0m[2m=[0m2.677991845 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:05:02.591204Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m1.037027694s [3melapsed_secs[0m[2m=[0m1.037027694 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:05:05.943775Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m3.169777078s [3melapsed_secs[0m[2m=[0m3.169777078 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:05:07.299106Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m1.157714458s [3melapsed_secs[0m[2m=[0m1.157714458 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:05:07.313585Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"UPDATE execution_processes SET status …" [3mdb.statement[0m[2m=[0m"\n\nUPDATE execution_processes \n               SET status = $1, exit_code = $2, completed_at = $3\n               WHERE id = $4\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m1.967925265s [3melapsed_secs[0m[2m=[0m1.9679252649999999 [3mslow_threshold[0m[2m=[0m1s
Failed to create secure directory (/home/mcp-user/.config/pulse): Permission denied
Connection failure: Connection refused
pa_context_connect() failed: Connection refused
[2m2025-10-29T05:05:07.831438Z[0m [31mERROR[0m [2mservices::services::notification[0m[2m:[0m Failed to send Linux notification: I/O error: No such file or directory (os error 2)
[2m2025-10-29T05:06:01.403564Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m2.706868861s [3melapsed_secs[0m[2m=[0m2.7068688610000002 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:06:01.993872Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m130 [3melapsed[0m[2m=[0m1.441532456s [3melapsed_secs[0m[2m=[0m1.441532456 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:06:02.080992Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m3.235322236s [3melapsed_secs[0m[2m=[0m3.235322236 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:06:02.142381Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m42 [3melapsed[0m[2m=[0m3.13284159s [3melapsed_secs[0m[2m=[0m3.13284159 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:06:02.431191Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m5 [3melapsed[0m[2m=[0m3.032067987s [3melapsed_secs[0m[2m=[0m3.032067987 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:06:02.820905Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m1.258309973s [3melapsed_secs[0m[2m=[0m1.258309973 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:07:03.727157Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m1.145275912s [3melapsed_secs[0m[2m=[0m1.145275912 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:07:08.788195Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m130 [3melapsed[0m[2m=[0m2.034738713s [3melapsed_secs[0m[2m=[0m2.034738713 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:07:08.847172Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m1.429833994s [3melapsed_secs[0m[2m=[0m1.429833994 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:07:09.007153Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"INSERT INTO execution_process_logs (execution_id, …" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO execution_process_logs (execution_id, logs, byte_size, inserted_at)\n               VALUES ($1, $2, $3, datetime('now', 'subsec'))\n               ON CONFLICT (execution_id) DO UPDATE\n               SET logs = logs || $2,\n                   byte_size = byte_size + $3,\n                   inserted_at = datetime('now', 'subsec')\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m1.590366739s [3melapsed_secs[0m[2m=[0m1.590366739 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:07:49.128620Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m5 [3melapsed[0m[2m=[0m1.432145537s [3melapsed_secs[0m[2m=[0m1.432145537 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:07:49.975002Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m45 [3melapsed[0m[2m=[0m1.938240134s [3melapsed_secs[0m[2m=[0m1.938240134 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:07:50.716101Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m48 [3melapsed[0m[2m=[0m1.54811121s [3melapsed_secs[0m[2m=[0m1.54811121 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:07:54.392995Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m45 [3melapsed[0m[2m=[0m1.546702974s [3melapsed_secs[0m[2m=[0m1.546702974 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:07:59.024113Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m1.070080264s [3melapsed_secs[0m[2m=[0m1.070080264 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:08:02.531687Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m1.560792749s [3melapsed_secs[0m[2m=[0m1.560792749 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:08:03.587812Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m5 [3melapsed[0m[2m=[0m1.262051983s [3melapsed_secs[0m[2m=[0m1.262051983 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:08:08.843634Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m130 [3melapsed[0m[2m=[0m1.150432671s [3melapsed_secs[0m[2m=[0m1.150432671 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:08:08.963033Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m1.273895891s [3melapsed_secs[0m[2m=[0m1.273895891 [3mslow_threshold[0m[2m=[0m1s
Failed to create secure directory (/home/mcp-user/.config/pulse): Permission denied
Connection failure: Connection refused
pa_context_connect() failed: Connection refused
[2m2025-10-29T05:08:08.967896Z[0m [31mERROR[0m [2mservices::services::notification[0m[2m:[0m Failed to send Linux notification: I/O error: No such file or directory (os error 2)
[2m2025-10-29T05:08:10.151177Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"UPDATE execution_processes SET after_head_commit …" [3mdb.statement[0m[2m=[0m"\n\nUPDATE execution_processes \n               SET after_head_commit = $1 \n               WHERE id = $2\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m1.158586696s [3melapsed_secs[0m[2m=[0m1.158586696 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:12:06.791197Z[0m [33m WARN[0m [2msqlx::query[0m[2m:[0m slow statement: execution time exceeded alert threshold [3msummary[0m[2m=[0m"SELECT t.id AS \"id!: …" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  t.id                            AS \"id!: Uuid\",\n  t.project_id                    AS \"project_id!: Uuid\",\n  t.title,\n  t.description,\n  t.status                        AS \"status!: TaskStatus\",\n  t.parent_task_attempt           AS \"parent_task_attempt: Uuid\",\n  t.created_at                    AS \"created_at!: DateTime<Utc>\",\n  t.updated_at                    AS \"updated_at!: DateTime<Utc>\",\n\n  CASE WHEN EXISTS (\n    SELECT 1\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n       AND ep.status        = 'running'\n       AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     LIMIT 1\n  ) THEN 1 ELSE 0 END            AS \"has_in_progress_attempt!: i64\",\n  \n  CASE WHEN (\n    SELECT ep.status\n      FROM task_attempts ta\n      JOIN execution_processes ep\n        ON ep.task_attempt_id = ta.id\n     WHERE ta.task_id       = t.id\n     AND ep.run_reason IN ('setupscript','cleanupscript','codingagent')\n     ORDER BY ep.created_at DESC\n     LIMIT 1\n  ) IN ('failed','killed') THEN 1 ELSE 0 END\n                                 AS \"last_attempt_failed!: i64\",\n\n  ( SELECT ta.executor\n      FROM task_attempts ta\n      WHERE ta.task_id = t.id\n     ORDER BY ta.created_at DESC\n      LIMIT 1\n    )                               AS \"executor!: String\"\n\nFROM tasks t\nWHERE t.project_id = $1\nORDER BY t.created_at DESC\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m2.130561117s [3melapsed_secs[0m[2m=[0m2.130561117 [3mslow_threshold[0m[2m=[0m1s
[2m2025-10-29T05:12:13.134817Z[0m [31mERROR[0m [2mservices::services::notification[0m[2m:[0m Failed to send Linux notification: I/O error: No such file or directory (os error 2)
Failed to create secure directory (/home/mcp-user/.config/pulse): Permission denied
Connection failure: Connection refused
pa_context_connect() failed: Connection refused
